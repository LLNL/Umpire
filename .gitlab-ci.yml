###############################################################################
# Copyright (c) 2016-22, Lawrence Livermore National Security, LLC and Umpire
# project contributors. See the COPYRIGHT file for details.
#
# SPDX-License-Identifier: (MIT)
###############################################################################

###############################################################################
# General GitLab pipelines configurations for supercomputers and Linux clusters
# at Lawrence Livermore National Laboratory (LLNL).
#
# This entire pipeline is LLNL-specific
# #############################################################################

# We organize the CI on Gitlab in sub-pipelines. Each sub-pipeline correspond
# to a test phase on a given machine. This design is simpler and more scalable
# than doing the same with stages.

stages:
  - sub-pipelines

# LLNL_SERVICE_USER:
# Use the umdev LLNL service to run CI

variables:

# Use the umdev LLNL service user to run CI. This prevent running pipelines as
# an actual user.
  LLNL_SERVICE_USER: umdev

# Use the service user workspace. Solves permission issues, stores everything
# at the same place whoever triggers a pipeline.
  CUSTOM_CI_BUILDS_DIR: /usr/workspace/umdev/gitlab-runner

# Trigger sub-pipelines:
ruby-build-and-test:
  stage: sub-pipelines
  variables:
    # Explicitly pass down values that we want to be able to set when triggering
    # pipelines manually or using scheduling
    ALL_TARGETS: "${ALL_TARGETS}"
    ON_RUBY: "${ON_RUBY}"
  trigger:
    include: .gitlab/ruby-build-and-test.yml
    strategy: depend

corona-build-and-test:
  stage: sub-pipelines
  variables:
    # Explicitly pass down values that we want to be able to set when triggering
    # pipelines manually or using scheduling
    ALL_TARGETS: "${ALL_TARGETS}"
    ON_CORONA: "${ON_CORONA}"
  trigger:
    include: .gitlab/corona-build-and-test.yml
    strategy: depend

lassen-build-and-test:
  stage: sub-pipelines
  variables:
    # Explicitly pass down values that we want to be able to set when triggering
    # pipelines manually or using scheduling
    ALL_TARGETS: "${ALL_TARGETS}"
    ON_LASSEN: "${ON_LASSEN}"
  trigger:
    include: .gitlab/lassen-build-and-test.yml
    strategy: depend

# If testing develop branch, trigger CHAI pipeline with this version of Umpire.
# TODO: Once spack allows to clone a specific commit on demand, then point to the exact commit.
#       This will prevent from sticking to a branch (here develop).
# trigger-chai:
#  stage: multi_project
#  rules:
#    - if: '$CI_COMMIT_BRANCH == "develop" || $MULTI_PROJECT == "ON"' #run only if ...
#  variables:
#    UPDATE_UMPIRE: develop
#  trigger:
#    project: radiuss/chai
#    branch: develop
#    strategy: depend

