##############################################################################
# Copyright (c) 2018, Lawrence Livermore National Security, LLC.
# Produced at the Lawrence Livermore National Laboratory
#
# Created by David Beckingsale, david@llnl.gov
# LLNL-CODE-747640
#
# All rights reserved.
#
# This file is part of Umpire.
#
# For details, see https://github.com/LLNL/Umpire
# Please also see the LICENSE file for MIT license.
##############################################################################

library: Umpire

options:
  F_module_per_class: False

format:
  C_prefix: umpire_

declarations:
- decl: namespace umpire
  declarations:

    - decl: class Allocator
      cxx_header: umpire/Allocator.hpp
      format:
        F_derived_name: UmpireAllocator

      declarations:
        - decl: void* allocate(size_t bytes)
        - decl: void deallocate (void* ptr)

    - decl: class ResourceManager
      cxx_header: umpire/ResourceManager.hpp
      format:
        F_derived_name: UmpireResourceManager

      declarations:
        - decl: ResourceManager& get() +constructor
          format:
            C_code: auto& SH_rv = ResourceManager::getInstance();
                    return static_cast<UMPIRE_resourcemanager *>(static_cast<void *>(&SH_rv));

        - decl: Allocator * getAllocator(const std::string& resource)
        - decl: void copy(void* src_ptr, void* dst_ptr)
        - decl: void deallocate(void* ptr)
