##############################################################################
# Copyright (c) 2016-19, Lawrence Livermore National Security, LLC and Umpire
# project contributors. See the COPYRIGHT file for details.
#
# SPDX-License-Identifier: (MIT)
##############################################################################
set(cookbook_output_dir ${EXAMPLE_OUTPUT_DIRECTORY}/cookbook)
set(cookbook_install_dir ${UMPIRE_EXAMPLE_INSTALL_DIRECTORY}/cookbook)

set (cookbook_depends umpire)

if (ENABLE_HIP)
  set (cookbook_depends ${cookbook_depends} hip_runtime)
endif()

blt_add_executable(
  NAME recipe_no_introspection
  SOURCES recipe_no_introspection.cpp
  DEPENDS_ON ${cookbook_depends}
  OUTPUT_DIR ${cookbook_output_dir})
list(APPEND umpire_cookbooks recipe_no_introspection)

if (ENABLE_NUMA)
  blt_add_executable(
    NAME recipe_move_between_numa
    SOURCES recipe_move_between_numa.cpp
    DEPENDS_ON ${cookbook_depends}
    OUTPUT_DIR ${cookbook_output_dir})
  list(APPEND umpire_cookbooks recipe_move_between_numa)
endif ()

if (ENABLE_CUDA)
  blt_add_executable(
    NAME recipe_shrink
    SOURCES recipe_shrink.cpp
    DEPENDS_ON ${cookbook_depends}
    OUTPUT_DIR ${cookbook_output_dir})
  list(APPEND umpire_cookbooks recipe_shrink)

  blt_add_executable(
    NAME recipe_advice_device_id
    SOURCES recipe_advice_device_id.cpp
    DEPENDS_ON ${cookbook_depends}
    OUTPUT_DIR ${cookbook_output_dir})
  list(APPEND umpire_cookbooks recipe_advice_device_id)

  blt_add_executable(
    NAME recipe_pool_advice
    SOURCES recipe_pool_advice.cpp
    DEPENDS_ON ${cookbook_depends}
    OUTPUT_DIR ${cookbook_output_dir})
  list(APPEND umpire_cookbooks recipe_pool_advice)

  blt_add_executable(
    NAME recipe_move_to_managed
    SOURCES recipe_move_to_managed.cpp
    DEPENDS_ON ${cookbook_depends}
    OUTPUT_DIR ${cookbook_output_dir})
  list(APPEND umpire_cookbooks recipe_move_to_managed)

  if (ENABLE_FORTRAN)
    blt_add_executable(
      NAME recipe_pinned_pool
      SOURCES recipe_pinned_pool.F
      DEPENDS_ON ${cookbook_depends}
      OUTPUT_DIR ${cookbook_output_dir})
    list(APPEND umpire_cookbooks recipe_pinned_pool)

    set_source_files_properties(
      recipe_pinned_pool.F
      PROPERTIES
      Fortran_FORMAT FREE)
  endif ()
endif ()

if (ENABLE_HIP)
  blt_add_executable(
    NAME recipe_shrink
    SOURCES recipe_shrink.cpp
    DEPENDS_ON ${cookbook_depends}
    OUTPUT_DIR ${cookbook_output_dir})
  list(APPEND umpire_cookbooks recipe_shrink)

  if (ENABLE_FORTRAN)
    blt_add_executable(
      NAME recipe_pinned_pool
      SOURCES recipe_pinned_pool.F
      DEPENDS_ON ${cookbook_depends}
      OUTPUT_DIR ${cookbook_output_dir})
    list(APPEND umpire_cookbooks recipe_pinned_pool)

    set_source_files_properties(
      recipe_pinned_pool.F
      PROPERTIES
      Fortran_FORMAT FREE)
  endif ()
endif ()


blt_add_executable(
  NAME recipe_dynamic_pool_heuristic
  SOURCES recipe_dynamic_pool_heuristic.cpp
  DEPENDS_ON ${cookbook_depends}
  OUTPUT_DIR ${cookbook_output_dir})
list(APPEND umpire_cookbooks recipe_dynamic_pool_heuristic)

blt_add_executable(
  NAME recipe_coalesce_pool
  SOURCES recipe_coalesce_pool.cpp
  DEPENDS_ON ${cookbook_depends}
  OUTPUT_DIR ${cookbook_output_dir})
list(APPEND umpire_cookbooks recipe_coalesce_pool)

blt_add_executable(
  NAME recipe_plot_allocations
  SOURCES recipe_plot_allocations.cpp
  DEPENDS_ON ${cookbook_depends}
  OUTPUT_DIR ${cookbook_output_dir})
list(APPEND umpire_cookbooks recipe_plot_allocations)

blt_add_executable(
  NAME recipe_mixed_pool
  SOURCES recipe_mixed_pool.cpp
  DEPENDS_ON ${cookbook_depends}
  OUTPUT_DIR ${cookbook_output_dir})
list(APPEND umpire_cookbooks recipe_mixed_pool)

install(TARGETS ${umpire_cookbooks} DESTINATION ${cookbook_install_dir})
