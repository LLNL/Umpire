###############################################################################
# Copyright (c) 2022, Lawrence Livermore National Security, LLC and RADIUSS
# project contributors. See the COPYRIGHT file for details.
#
# SPDX-License-Identifier: (MIT)
###############################################################################

########################
# Overridden shared jobs
########################
# We duplicate the shared jobs description and add necessary changes for RAJA.
# We keep ${PROJECT_<MACHINE>_VARIANTS} and ${PROJECT_<MACHINE>_DEPS} So that
# the comparison with the original job is easier.


############
# Extra jobs
############
# We do not recommend using ${PROJECT_<MACHINE>_VARIANTS} and
# ${PROJECT_<MACHINE>_DEPS} in the extra jobs. There is no reason not to fully
# describe the spec here.

ibm_clang_14_0_5_mpi_shmem:
  variables:
    SPEC: "~shared ~device_alloc +tools tests=basic +ipc_shmem +mpi %clang@14.0.5.ibm.gcc.8.3.1 ^spectrum-mpi ^blt@e71311983c9b31a577e260c55c52a2f2848dfb5"
  extends: .build_and_test_on_lassen

ibm_clang_14_0_5_mpi:
  variables:
    SPEC: "~shared +fortran ~device_alloc +tools +mpi tests=basic %clang@14.0.5.ibm.gcc.8.3.1 ^spectrum-mpi ^blt@e71311983c9b31a577e260c55c52a2f2848dfb5"
  extends: .build_and_test_on_lassen

ibm_clang_14_0_5_gcc_8_3_1_cuda_11_7_0_mpi_shmem:
  variables:
    SPEC: "~shared ~device_alloc +tools +cuda +ipc_shmem +mpi tests=basic %clang@14.0.5.ibm.gcc.8.3.1 ^spectrum-mpi ^cuda@11.7.0+allow-unsupported-compilers ^blt@e71311983c9b31a577e260c55c52a2f2848dfb5"
    MODULE_LIST: "cuda/11.7.0"
  extends: .build_and_test_on_lassen

clang_12_0_1_libcpp:
  variables:
    SPEC: "~shared ~device_alloc +tools tests=basic +libcpp %clang@12.0.1 ^blt@e71311983c9b31a577e260c55c52a2f2848dfb5"
  extends: .build_and_test_on_lassen

clang_12_0_1_gcc_8_3_1_memleak:
  variables:
    SPEC: "~shared +asan +sanitizer_tests +tools ~device_alloc tests=basic %clang@12.0.1.gcc.8.3.1 cxxflags==-fsanitize=address ^blt@e71311983c9b31a577e260c55c52a2f2848dfb5"
    ASAN_OPTIONS: "detect_leaks=1"
  extends: .build_and_test_on_lassen

# clang_9_0_0_datarace (build and test on lassen):
#   variables:
#     SPEC: "%clang@9.0.0 cxxflags==\"-fsanitize=thread\""
#   allow_failure: true
#   extends: .build_and_test_on_lassen

gcc_8_3_1_dev_benchmarks:
  variables:
    SPEC: "~shared +dev_benchmarks +tools ~device_alloc build_type=Release %gcc@8.3.1 ^blt@e71311983c9b31a577e260c55c52a2f2848dfb5"
  extends: .build_and_test_on_lassen

xl_2022_08_19_default_omp_target:
  variables:
    SPEC: "~shared ~device_alloc +tools +openmp +openmp_target tests=basic %xl@16.1.1.12 ^blt@e71311983c9b31a577e260c55c52a2f2848dfb5"
  allow_failure: true
  extends: .build_and_test_on_lassen

gcc_8_3_1_numa:
  variables:
    SPEC: "~shared +fortran +numa +tools ~device_alloc tests=basic %gcc@8.3.1 ^blt@e71311983c9b31a577e260c55c52a2f2848dfb5"
  extends: .build_and_test_on_lassen

gcc_8_3_1_cuda_11_7_0:
  variables:
    SPEC: "+fortran +cuda +tools +backtrace ~device_alloc tests=basic %gcc@8.3.1 ^cuda@11.7.0+allow-unsupported-compilers ^blt@e71311983c9b31a577e260c55c52a2f2848dfb5"
    MODULE_LIST: "cuda/11.7.0"
  extends: .build_and_test_on_lassen

# Develop/main builds against specific tpl versions.

gcc_8_3_1_tpls:
  variables:
    SPEC: "~shared +fortran ~device_alloc +tools tests=basic %gcc@8.3.1 ^blt@e71311983c9b31a577e260c55c52a2f2848dfb5"
  extends: .build_and_test_on_lassen

ibm_clang_14_0_5_gcc_8_3_1_cuda_11_7_0_tpls:
  variables:
    SPEC: "~shared +fortran +cuda ~device_alloc +tools tests=basic %clang@14.0.5.ibm.gcc.8.3.1 ^cuda@11.7.0+allow-unsupported-compilers ^blt@e71311983c9b31a577e260c55c52a2f2848dfb5"
    MODULE_LIST: "cuda/11.7.0"
  extends: .build_and_test_on_lassen

xl_2022_08_19_gcc_8_3_1_cuda_11_7_tpls:
  variables:
    SPEC: "~shared +fortran +cuda ~device_alloc +tools tests=basic %xl@16.1.1.12.gcc.8.3.1 ^cuda@11.7.0+allow-unsupported-compilers ^blt@e71311983c9b31a577e260c55c52a2f2848dfb5"
    MODULE_LIST: "cuda/11.7.0"
  extends: .build_and_test_on_lassen
