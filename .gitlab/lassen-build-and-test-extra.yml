###############################################################################
# Copyright (c) 2022, Lawrence Livermore National Security, LLC and RADIUSS
# project contributors. See the COPYRIGHT file for details.
#
# SPDX-License-Identifier: (MIT)
###############################################################################

########################
# Overridden shared jobs
########################
# We duplicate the shared jobs description and add necessary changes for RAJA.
# We keep ${PROJECT_<MACHINE>_VARIANTS} and ${PROJECT_<MACHINE>_DEPS} So that
# the comparison with the original job is easier.

# No overridden jobs so far.

############
# Extra jobs
############
# We do not recommend using ${PROJECT_<MACHINE>_VARIANTS} and
# ${PROJECT_<MACHINE>_DEPS} in the extra jobs. There is not reason not to fully
# describe the spec here.

ibm_clang_10_0_1_mpi_shmem:
  variables:
    SPEC: "%clang@ibm.10.0.1 +ipc_shmem +mpi ^spectrum-mpi"
  extends: .build_and_test_on_lassen

ibm_clang_10_0_1_mpi:
  variables:
    SPEC: "+fortran %clang@ibm.10.0.1 +mpi ^spectrum-mpi"
  extends: .build_and_test_on_lassen

ibm_clang_10_0_1_cuda_10_1_168_mpi_shmem:
  variables:
    SPEC: "%clang@ibm.10.0.1 +cuda +ipc_shmem +mpi cxxflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" cflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" ^spectrum-mpi ^cuda@10.1.168"
  extends: .build_and_test_on_lassen

# Extras.
clang_9_0_0_libcpp:
  variables:
    SPEC: "%clang@9.0.0+libcpp cxxflags=\"-stdlib=libc++ -DGTEST_HAS_CXXABI_H_=0\" cflags=\"-DGTEST_HAS_CXXABI_H_=0\""
  extends: .build_and_test_on_lassen

clang_9_0_0_memleak:
  variables:
    SPEC: "+asan +sanitizer_tests %clang@9.0.0 cxxflags=-fsanitize=address"
    ASAN_OPTIONS: "detect_leaks=1"
  extends: .build_and_test_on_lassen

# clang_9_0_0_datarace (build and test on lassen):
#   variables:
#     SPEC: "%clang@9.0.0 cxxflags=-fsanitize=thread"
#   allow_failure: true
#   extends: .build_and_test_on_lassen

gcc_8_3_1_dev_benchmarks:
  variables:
    SPEC: "+dev_benchmarks %gcc@8.3.1 build_type=Release"
  extends: .build_and_test_on_lassen

xl_default_omp_target:
  variables:
    SPEC: "%xl@default+openmp+openmp_target ^cmake@3.14.5"
  extends: .build_and_test_on_lassen

gcc_8_3_1_numa:
  variables:
    SPEC: "+fortran +numa%gcc@8.3.1"
  extends: .build_and_test_on_lassen

gcc_8_3_1_cuda_10_1_168:
  variables:
    SPEC: "+fortran +cuda+shared+tools+backtrace %gcc@8.3.1 ^cuda@10.1.168"
  extends: .build_and_test_on_lassen

# Develop/main builds against specific tpl versions.

gcc_8_3_1_tpls:
  variables:
    SPEC: "+fortran %gcc@8.3.1 ^blt@develop"
  extends: .build_and_test_on_lassen

ibm_clang_9_0_0_gcc_8_3_1_cuda_10_1_168_tpls:
  variables:
    SPEC: "+fortran +cuda %clang@ibm.9.0.0 cxxflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" cflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-8.3.1\" ^cuda@10.1.168 ^blt@develop"
  extends: .build_and_test_on_lassen

xl_16_1_1_12_gcc_8_3_1_cuda_10_1_168_tpls:
  variables:
    SPEC: "+fortran +cuda %xl@16.1.1.12 cxxflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-7.3.1\" cflags=\"--gcc-toolchain=/usr/tce/packages/gcc/gcc-7.3.1\" ^cuda@10.1.168 ^cmake@3.14.5 ^blt@develop"
  extends: .build_and_test_on_lassen
