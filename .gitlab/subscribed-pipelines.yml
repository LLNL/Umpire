###############################################################################
# Copyright (c) 2022, Lawrence Livermore National Security, LLC and RADIUSS
# project contributors. See the COPYRIGHT file for details.
#
# SPDX-License-Identifier: (MIT)
###############################################################################

# The template job to test whether a machine is up.
# Expects CI_MACHINE defined to machine name.
.machine-check:
  stage: machine-checks
  tags: [shell, oslic]
  variables:
    GIT_STRATEGY: none
  script:
    - |
      if [[ $(jq '.[env.CI_MACHINE].total_nodes_up' /usr/global/tools/lorenz/data/loginnodeStatus) == 0 ]]
      then
        echo -e "\e[31mNo node available on ${CI_MACHINE}\e[0m"
        curl --url "https://api.github.com/repos/${GITHUB_PROJECT_ORG}/${GITHUB_PROJECT_NAME}/statuses/${CI_COMMIT_SHA}" \
             --header 'Content-Type: application/json' \
             --header "authorization: Bearer ${GITHUB_TOKEN}" \
             --data "{ \"state\": \"failure\", \"target_url\": \"${CI_PIPELINE_URL}\", \"description\": \"GitLab ${CI_MACHINE} down\", \"context\": \"ci/gitlab/${CI_MACHINE}\" }"
        exit 1
      fi

###
# Trigger a build-and-test pipeline for a machine.
# Comment the jobs for machines you donâ€™t need.
###

# One job to generate the job list for all the subpipelines
generate-job-lists:
  stage: generate-job-lists
  tags: [shell, oslic]
  variables:
    RADIUSS_JOBS_PATH: "scripts/radiuss-spack-configs/gitlab/radiuss-jobs"
    LOCAL_JOBS_PATH: ".gitlab/jobs"
  scripts:
    - cat ${RADIUSS_JOBS_PATH}/ruby.yml ${LOCAL_JOBS_PATH}/ruby.yml > ruby-jobs.yml
    - cat ${RADIUSS_JOBS_PATH}/lassen.yml ${LOCAL_JOBS_PATH}/lassen.yml > lassen-jobs.yml
    - cat ${RADIUSS_JOBS_PATH}/corona.yml ${LOCAL_JOBS_PATH}/corona.yml > corona-jobs.yml
    - cat ${RADIUSS_JOBS_PATH}/tioga.yml ${LOCAL_JOBS_PATH}/tioga.yml > tioag-jobs.yml
  artifacts:
    paths:
      - ruby_jobs.yml
      - lassen_jobs.yml
      - corona_jobs.yml
      - tioga_jobs.yml

# RUBY
ruby-up-check:
  variables:
    CI_MACHINE: "ruby"
  extends: [.machine-check]

ruby-build-and-test:
  variables:
    CI_MACHINE: "ruby"
  needs: [ruby-up-check]
  extends: [.build-and-test]

# CORONA
corona-up-check:
  variables:
    CI_MACHINE: "corona"
  extends: [.machine-check]

corona-build-and-test:
  variables:
    CI_MACHINE: "corona"
  needs: [corona-up-check]
  extends: [.build-and-test]

# TIOGA
tioga-up-check:
  variables:
    CI_MACHINE: "tioga"
  extends: [.machine-check]

tioga-build-and-test:
  variables:
    CI_MACHINE: "tioga"
  needs: [tioga-up-check]
  extends: [.build-and-test]

# LASSEN
lassen-up-check:
  variables:
    CI_MACHINE: "lassen"
  extends: [.machine-check]

lassen-build-and-test:
  variables:
    CI_MACHINE: "lassen"
  needs: [lassen-up-check]
  extends: [.build-and-test]


## If testing develop branch, trigger CHAI pipeline with this version of Umpire.
## TODO: Once Spack allows to clone a specific commit on demand, then point to
## the exact commit. This will prevent from sticking to a branch (here develop).
# trigger-chai:
#  stage: multi-project
#  rules:
#    - if: '$CI_COMMIT_BRANCH == "develop" || $MULTI_PROJECT == "ON"' #run only if ...
#  variables:
#    UPDATE_UMPIRE: develop
#  trigger:
#    project: radiuss/chai
#    branch: develop
#    strategy: depend
